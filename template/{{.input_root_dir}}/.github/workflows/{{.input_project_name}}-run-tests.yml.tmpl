name: {{ if (eq .input_include_feature_store `yes`) }}Feature and {{end}}Training Unit and Integration Tests for {{ .input_project_name }}
on:
  workflow_dispatch:
  pull_request:
    paths:
      - '{{template `project_name_alphanumeric_underscore` .}}/**'
      - '.github/workflows/{{ .input_project_name }}-run-tests.yml'

defaults:
  run:
    working-directory: ./{{template `project_name_alphanumeric_underscore` .}}/

env:
  {{ if (eq .input_cloud `azure`) -}}
  ARM_TENANT_ID: {{`${{ secrets.STAGING_AZURE_SP_TENANT_ID }}`}}
  ARM_CLIENT_ID: {{`${{ secrets.STAGING_AZURE_SP_APPLICATION_ID }}`}}
  ARM_CLIENT_SECRET: {{`${{ secrets.STAGING_AZURE_SP_CLIENT_SECRET }}`}}
  {{ else -}}
  DATABRICKS_TOKEN: {{`${{ secrets.STAGING_WORKSPACE_TOKEN }}`}}
  {{- end }}

concurrency: {{template `project_name_alphanumeric_underscore` .}}-{{ if (eq .input_include_feature_store `yes`) }}feature-{{end}}training-integration-test-staging

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.10
      {{- if (eq .input_include_feature_store `yes`) }}
      # Feature store tests bring up a local Spark session, so Java is required.
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
      {{- end }}
      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            pip install -r ../test-requirements.txt
      - name: Run tests with pytest
        run: |
            pytest

  integration_test:
    needs: unit_tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
      - uses: databricks/setup-cli@{{template `cli_version` .}}
      - name: Validate Bundle For Test Deployment Target in Staging Workspace
        id: validate
        run: |
          databricks bundle validate -t {{ .input_test_catalog_name }}
      - name: Deploy Bundle to Test Deployment Target in Staging Workspace
        id: deploy
        run: |
          databricks bundle deploy -t {{ .input_test_catalog_name }}
      {{- if (eq .input_include_feature_store `yes`) }}
      - name: Run Feature Engineering Workflow for Test Deployment Target in Staging Workspace
        id: feature_engineering
        run: |
          databricks bundle run write_feature_table_job -t {{ .input_test_catalog_name }}
      {{- end }}
      - name: Run Training Workflow for Test Deployment Target in Staging Workspace
        id: training
        run: |
          databricks bundle run model_training_job -t {{ .input_test_catalog_name }}
